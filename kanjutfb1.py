# Author : ARLIDA XD
# https://www.github.com/ARLIDA-XD
#jangan di dec file ini hargai arlida xd
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))